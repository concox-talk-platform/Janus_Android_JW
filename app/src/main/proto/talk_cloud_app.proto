syntax = "proto3";

package talk_cloud;

import "talk_cloud_model.proto";


service TalkCloud {
    // app注册普通用户
    rpc AppRegister (AppRegReq) returns (AppRegRsp) {
    }

    // 注册对讲机 /***暂时用不到***/
    rpc DeviceRegister (DeviceRegReq) returns (DeviceRegRsp) {
    }

    // App用户登录
    rpc Login (LoginReq) returns (LoginRsp) {
    }

    // App用户退出
    rpc Logout (LogoutReq) returns (LogoutRsp) {
    }

    // 设置锁定组（默认所在组）
    rpc SetLockGroupId (SetLockGroupIdReq) returns (SetLockGroupIdResp) {
    }

    // web端推送文件类型im数据
    rpc ImMessagePublish (ImMsgReqData) returns (ImMsgRespData) {
    }

    // IM离线数据、心跳、Im消息，根据请求消息的类型，返回对应类型的数据
    rpc DataPublish (stream StreamRequest) returns (stream StreamResponse) {
    }

    // App用户增加好友
    rpc AddFriend (FriendNewReq) returns (FriendNewRsp) {
    }

    // App用户删除好友
    rpc DelFriend (FriendDelReq) returns (FriendDelRsp) {
    }

    // 获取好友列表
    rpc GetFriendList (FriendsReq) returns (FriendsRsp) {
    }

    // 通过关键字直接查找数据库里的用户
    rpc SearchUserByKey (UserSearchReq) returns (UserSearchRsp) {
    }

    // 创建组
    rpc CreateGroup (CreateGroupReq) returns (CreateGroupResp) {
    }

    // 某个App用户添加进组
    rpc JoinGroup (GrpUserAddReq) returns (GrpUserAddRsp) {
    }

    // 移除某个组成员
    rpc RemoveGrpUser (GrpUserDelReq) returns (GrpUserDelRsp) {
    }

    // 退出某个组  /***暂时没有用到***/
    rpc ExitGrp (UserExitReq) returns (UserExitRsp) {
    }

    // 移除某个组 /***暂时也没有用到***/
    rpc RemoveGrp (GroupDelReq) returns (GroupDelRsp) {
    }

    // 获取群组列表
    rpc GetGroupList (GrpListReq) returns (GroupListRsp) {
    }

    // 通过关键字，获取群组
    rpc SearchGroup (GrpSearchReq) returns (GroupListRsp) {
    }

    // 邀请其他人进群
    rpc InviteUserIntoGroup (InviteUserReq) returns (InviteUserResp) {
    };

    // App单独获取某个群组信息以及群成员等信息
    rpc GetGroupInfo (GetGroupInfoReq) returns (GetGroupInfoResp) {
    };

}

/*************** Register ***************/
// 头部信息
message Head {
    string version = 1; // 主版本号
    string sub_version = 2; // 子版本号
    int32 timestamp = 3; // 时间戳
}

// App注册用户请求
message AppRegReq {
    Head head = 1;
    string name = 2;
    string password = 3;
}

// App注册用户响应
message AppRegRsp {
    int32 id = 1;
    string userName = 2;
    Result res = 3;
}

// Device注册请求
message DeviceRegReq {
    int32 account_id = 1; // 管理账户ID
    string device_list = 2; // IMEI列表
}

// Device注册响应
message DeviceRegRsp {
    Result res = 1;
}

// 登录请求
message LoginReq {
    Head head = 1;
    string name = 2;
    string passwd = 3;
}

// 登录返回的数据（群组列表，好友列表等）
message LoginRsp {
    Member userInfo = 1;
    repeated FriendRecord friend_list = 2;
    repeated GroupInfo group_list = 3;
    Result res = 4;
}

// 获取Im数据或者发送im数据的内容消息定义
message ImMsgReqData {
    // 用户uid 发送者
    int32 id = 1;

    // 发送者名字
    string SenderName = 2;

    // 1 发送个单独某个人，2 是发给群组里面
    int32 ReceiverType = 3;

    // 接受者的id，群组就是群组id
    int32 ReceiverId = 4;

    // 资源文件路径，app端发送文字信息，就把文字内容放在这里
    string ResourcePath = 5;

    // im消息类型 	1 普通文本   2 图片  3  音频文件  4 视频文件  5 PDF文件
    int32 MsgType = 6;

    // 接收者名字
    string ReceiverName = 7;

    // 消息发送时间
    string SendTime = 8;

    string msgCode = 9;
}

// 上传文件之后返回给web api的相应
message ImMsgRespData {
    Result result = 1;
    string msgCode = 2;
}

// 退出请求
message LogoutReq {
    Head head = 1;
    string name = 2;
}

message LogoutRsp {
    Result res = 1;
}

// 设置群组锁定请求
message SetLockGroupIdReq {
    int32 uId = 1;
    int32 gId = 2;
}
// 设置群组锁定响应
message SetLockGroupIdResp {
    Result Res = 1;
}

message StreamRequest {
    // 用户id
    int32 uid = 1;

    // 1  初次登录返回的数据。比如用户列表，群组列表，该用户的个人信息
    // 2  用户离线时的IM数据
    // 3  APP和web通过httpClient上传的文件信息、在线时通信的im数据
    // 4  用户登录后，每隔interval秒向stream发送一个消息，测试能不能连通，不能连通就认为该用户下线
    int32 dataType = 2;

    // 暂时用不到，因为login暂时保持原来的接口
    string name = 3;
    string passwd = 4;

    // 这个也暂时用不到，文件上传不走这里，文件上传是通过http client
    UploadFileData FileDataReq = 5;

    // app发送文字类型im数据的时候使用
    ImMsgReqData imMsg = 6;

}

message UploadFileData {
    int32 id = 1; // 谁发的，是单独，还是发给群组
    int32 sendType = 2;
    int32 ReceiverId = 3; // 接受者的id，群组就是群组id
}

message ImReceiver {
    int32 type = 1; // 1 是发送给群组， 2是发送给个人
    GroupInfo groupInfo = 2;
    Member userInfo = 3;
}


message StreamResponse {
    int32 uid = 1;

    // 1  初次登录返回的数据。比如用户列表，群组列表，该用户的个人信息
    // 2  用户离线时的IM数据
    // 3  APP和web通过httpClient上传的文件信息、在线时通信的im数据
    // 4  用户登录后，每隔interval秒向stream发送一个消息，测试能不能连通，不能连通就认为该用户下线
    int32 DataType = 2;

    // 初次登录类型的请求消息，应该返回的数据，但是目前login还是保持原来的接口，这个就暂时用不到
    FirstLoginData loginResp = 3;

    // 即时im消息，具体消息类型，在ImMsgReqData里面已经注释
    ImMsgReqData imMsgData = 4;

    // im离线消息
    OfflineImMsgResp offlineImMsgResp = 5;

    // 登录建立这个stream流之后，会每隔interval秒（目前暂定5s）收到这样一条消息，可以忽略
    KeepAlive keepAlive = 6;

    // 用户离线，推送给其他在一个组的在线用户更新状态
    LogoutNotify logoutNotify = 7;

    // 通知的人数
    int32 notifyTotal = 8;

    // 发送消息类型的请求结果
    Result res = 9;
}

message LogoutNotify {
//    Member userInfo = 1;
    repeated GroupInfo group_list = 1;
}

message OfflineImMsgResp {
    repeated OfflineImMsg offlineSingleImMsgs = 1;
    repeated OfflineImMsg offlineGroupImMsgs = 2;
}
message OfflineImMsg {
    int32 SenderId = 1;
    int32 GroupId = 2;
    string Name =3;
    int32 MsgReceiverType  = 4;
    repeated ImMsgReqData imMsgData = 5;
}

message FirstLoginData {
    Member userInfo = 1;
    repeated FriendRecord friend_list = 2;
    repeated GroupInfo group_list = 3;
}

message KeepAlive {
    int32 uid = 1;
    int32 SYN = 2;
}

/************** User_Friend *************/
message FriendNewReq {
    int32 uid = 1;
    int32 fuid = 2;
}

message FriendNewRsp {
    Result res = 1;
}

message FriendDelReq {
    int32 uid = 1;
    int32 fuid = 2;
    int32 timestamp = 3;
}

message FriendDelRsp {
    Result err = 1;
}

message FriendsReq {
    int32 uid = 1;
}

message FriendRecord {
    int32 uid = 1;
    string name = 2;
    int64 imei = 3;
}

message FriendsRsp {
    int32 uid = 1;
    repeated FriendRecord friend_list = 2;
    Result res = 3;
}

message UserSearchReq {
    int32 uid = 1;
    string target = 2;
}

message UserRecord {
    int32 uid = 1;
    string imei = 2;
    string name = 3;
    int32 online = 4;
    int32 LockGroupId = 5;
    int32 user_type = 6; // 用户类型
    int32 grp_role = 7; // 2 群主  1 普通群成员
    bool isFriend = 8; // 是否是好友
}

message UserSearchRsp {
    Result res = 1;
    repeated UserRecord user_list = 2;

}
/**************** Group *****************/

message CreateGroupReq {
    //    repeated int32 deviceIds = 1;
    string deviceIds = 1;
    string groupName = 2;
    int32 accountId = 3;
    repeated Member deviceInfos = 4;
    Group groupInfo = 5;
}

message CreateGroupResp {
    GroupInfo GroupInfo = 1;
    Result res = 2;
}

message GrpUserAddReq {
    int32 uid = 1;
    int32 gid = 2;
    int32 timestamp = 3;
}

message GrpUserAddRsp {
    Result res = 1;
}

message GrpUserDelReq {
    int32 uid = 1;
    int32 gid = 2;
    int32 timestamp = 3;
}

message GrpUserDelRsp {
    Result res = 1;
}

message UserExitReq {
    int32 uid = 1;
    int32 gid = 2;
}

message UserExitRsp {
    Result res = 1;
}

message GroupDelReq {
    int32 uid = 1;
    int32 role_type = 2;
    int32 gid = 3;
}

message GroupDelRsp {
    Result res = 1;
}

message GrpListReq {
    int32 uid = 1;
}

message GroupInfo {
    int32 gid = 1;
    string group_name = 2;
    int32 group_manager = 3;
    repeated UserRecord usr_list = 4; // 群里的成员
    bool isExist = 5; // 该用户是否默认在这个组
}

// 返回模糊查找以及目前用户所在的群组
message GroupListRsp {
    int32 uid = 1;
    repeated GroupInfo group_list = 2;
    Result res = 3;
}

message GrpSearchReq {
    int32 uid = 1;
    string target = 2;
}


message InviteUserReq {
    int32 gid = 1;
    string uids = 2;
}

message InviteUserResp {
    repeated UserRecord usr_list = 1; // 群里的成员
    Result res = 2;
}

message GetGroupInfoReq {
    int32 gid = 1;
    int32 uid = 2;
}

message GetGroupInfoResp {
    GroupInfo groupInfo = 1;
    Result res = 2;
}
